generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  typeUser  TypeUser @default(Visitante)
  createdAt DateTime @default(now())

  // Relacionamento
  loan Loan[]

  @@map("users")
}

enum TypeUser {
  Aluno
  Funcionario
  Administrador
  Visitante

  // PENDING // Empréstimo aguardando devolução
  // RETURNED // Empréstimo devolvido
  // LATE // Empréstimo atrasado
}

model Book {
  id              String   @id @default(uuid())
  title           String
  author          String
  gender          String
  publicationDate DateTime @map("publication_date")
  available       Boolean

  // Relacionamento
  loan Loan[]

  @@map("books")
}

model Loan {
  id         String     @id @default(cuid()) // ID único para cada empréstimo
  userId     String // ID do usuário que está pegando o empréstimo
  bookId     String // ID do livro emprestado
  loanDate   DateTime   @default(now()) // Data do empréstimo
  returnDate DateTime? // Data prevista ou efetiva de devolução
  status     LoanStatus @default(PENDING) // Status do empréstimo
  createdAt  DateTime   @default(now()) @map("created_at") // Registro de criação
  updatedAt  DateTime   @updatedAt @map("updated_at") // Registro de última atualização

  // Relacionamentos
  user User @relation(fields: [userId], references: [id])
  book Book @relation(fields: [bookId], references: [id])

  @@map("loans") // Nome da tabela no banco de dados
}

enum LoanStatus {
  PENDING // Empréstimo aguardando devolução
  RETURNED // Empréstimo devolvido
  LATE // Empréstimo atrasado
}
